{"version":3,"file":"static/js/454.8139cdb0.chunk.js","mappings":"gOAEaA,EAAS,mCAAG,6GAEEC,EAAAA,EAAAA,IACrB,4DAHmB,cAEfC,EAFe,yBAMdA,EAASC,MANK,gCAQrBC,QAAQC,MAAR,MARqB,yDAAH,qD,2BCDtB,EAA6B,gCAA7B,EAAoE,0BAApE,EAA2G,gCAA3G,EAAoJ,4BAApJ,EAA2L,8BAA3L,EAAqO,+BAArO,EAA4Q,2BAA5Q,EAAgT,4BAAhT,EAA0V,iCAA1V,EAAoY,4BAApY,EAA4a,+BAA5a,EAAod,4BAApd,EAAyf,4BAAzf,EAAkiB,gCAAliB,EAA8kB,+B,SCOjkBC,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,gBAE/CJ,GAAcA,EAAWK,OAAS,EACpCP,EAAUE,GAEVM,IAAgBC,MAAK,SAAAf,GAAI,OAAIM,EAAUN,EAAd,GAE5B,GAAE,KAEHO,EAAAA,EAAAA,YAAU,WACJF,EAAOQ,OAAS,GAClBF,aAAaK,QAAQ,cAAeP,KAAKQ,UAAUZ,GAEtD,GAAE,CAACA,IAoBJ,OACE,eAAIa,UAAWC,EAAf,SACGd,EAAOe,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,KAAMjB,EAA6C,EAA7CA,OAAQkB,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC5CC,EAA8BH,EC/C5BI,WAAWC,QAAQ,wBAAyB,KDgD9CC,EAAmBJ,EAAc,YAAc,SAC/CK,EAAoBL,EACtBN,EACAA,EAEJ,OACE,gBAAaD,UAAWC,EAAxB,WACE,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXY,IAAKC,EACLC,IAAI,iDACJC,QAAQ,UAEV,gBACEhB,UAAWC,EACXY,IAAKI,EACLF,IAAI,2BACJC,QAAQ,aAGZ,iBAAKhB,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,KAChB,gBACED,UAAWC,EACXY,IAAKP,GAAkBY,EACvBH,IAAKX,EACLe,MAAOf,EACPY,QAAQ,aAGZ,iBAAKhB,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,mBAAiCd,EAAjC,cACA,cACEa,UAAWC,EADb,mBAEKO,EAFL,iBAGA,mBACER,UAAS,UAAKC,EAAL,YAAsBW,GAC/BQ,QAAS,kBA5DSC,EA4DqBlB,OA3DnDf,GAAU,SAAAkC,GAAU,OAClBA,EAAWpB,KAAI,SAAAqB,GACb,GAAIA,EAAMpB,KAAOkB,EAAQ,CACvB,IAAMG,EACJC,SAASF,EAAMlB,UAAW,KAAOkB,EAAMhB,aAAe,EAAI,GAE5D,OAAO,kBACFgB,GADL,IAEEhB,aAAcgB,EAAMhB,YACpBF,UAAWmB,EAAaf,YAE3B,CACD,OAAOc,CACR,GAbiB,IADU,IAAAF,CA4DT,EAFX,UAIE,cAAGrB,UAAWC,EAAd,SAAkCU,WAlC/BR,EAuCZ,KAGN,E,SE/FYuB,E,OAAUC,EAAAA,QAAH,8QCSpB,EAPe,WACb,OACE,SAACD,EAAD,WACE,SAACzC,EAAD,KAGL,C","sources":["utils/Api.jsx","webpack://TweetTrends/./src/components/TweetsList/tweestsList.module.css?5c11","components/TweetsList/TweetsList.jsx","utils/addComma.jsx","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getTweets = async () => {\n  try {\n    const response = await axios.get(\n      'https://6478726a362560649a2dc983.mockapi.io/api/v1/users'\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tweetsList\":\"tweestsList_tweetsList__U+P1K\",\"item\":\"tweestsList_item__0Iirv\",\"topWrapper\":\"tweestsList_topWrapper__sahjo\",\"clouds\":\"tweestsList_clouds__rXHNw\",\"goitLogo\":\"tweestsList_goitLogo__3UR4Y\",\"separator\":\"tweestsList_separator__CLXfB\",\"bagel\":\"tweestsList_bagel__zQsQP\",\"avatar\":\"tweestsList_avatar__5rWuY\",\"downWrapper\":\"tweestsList_downWrapper__pHYyB\",\"tweets\":\"tweestsList_tweets__rdgvU\",\"followers\":\"tweestsList_followers__ZrEOU\",\"button\":\"tweestsList_button__s1Lev\",\"follow\":\"tweestsList_follow__zX0Vb\",\"followText\":\"tweestsList_followText__uo1N0\",\"following\":\"tweestsList_following__lZk-q\"};","import { useEffect, useState } from 'react';\nimport * as API from '../../utils/Api';\nimport photoNotFound from '../../utils/images/photo-not-found.jpg';\nimport clouds from '../../utils/images/clouds.png';\nimport goit from '../../utils/images/goit.png';\nimport styles from './tweestsList.module.css';\nimport { addComma } from '../../utils/addComma';\n\nexport const TweetsList = () => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    const savedState = JSON.parse(localStorage.getItem('tweetsState'));\n\n    if (savedState && savedState.length > 0) {\n      setTweets(savedState);\n    } else {\n      API.getTweets().then(data => setTweets(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (tweets.length > 0) {\n      localStorage.setItem('tweetsState', JSON.stringify(tweets));\n    }\n  }, [tweets]);\n\n  const handleFollowButtonClick = userId => {\n    setTweets(prevTweets =>\n      prevTweets.map(tweet => {\n        if (tweet.id === userId) {\n          const newFollowers =\n            parseInt(tweet.followers, 10) + (tweet.isFollowing ? -1 : 1);\n\n          return {\n            ...tweet,\n            isFollowing: !tweet.isFollowing,\n            followers: newFollowers.toString(),\n          };\n        }\n        return tweet;\n      })\n    );\n  };\n\n  return (\n    <ul className={styles.tweetsList}>\n      {tweets.map(({ id, user, tweets, followers, avatar, isFollowing }) => {\n        const followersWithComma = addComma(followers);\n        const followButtonText = isFollowing ? 'FOLLOWING' : 'FOLLOW';\n        const followButtonClass = isFollowing\n          ? styles.following\n          : styles.follow;\n\n        return (\n          <li key={id} className={styles.item}>\n            <div className={styles.topWrapper}>\n              <img\n                className={styles.clouds}\n                src={clouds}\n                alt=\"Clouds with a question mark and a progress bar\"\n                loading=\"lazy\"\n              />\n              <img\n                className={styles.goitLogo}\n                src={goit}\n                alt=\"The logo of GoIT company\"\n                loading=\"lazy\"\n              />\n            </div>\n            <div className={styles.separator}>\n              <div className={styles.bagel}></div>\n              <img\n                className={styles.avatar}\n                src={avatar ? avatar : photoNotFound}\n                alt={user}\n                title={user}\n                loading=\"lazy\"\n              />\n            </div>\n            <div className={styles.downWrapper}>\n              <p className={styles.tweets}>{`${tweets} TWEETS`}</p>\n              <p\n                className={styles.followers}\n              >{`${followersWithComma} FOLLOWERS`}</p>\n              <button\n                className={`${styles.button} ${followButtonClass}`}\n                onClick={() => handleFollowButtonClick(id)}\n              >\n                <p className={styles.followText}>{followButtonText}</p>\n              </button>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","export const addComma = number => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column\n\n  max-width: var(--desktop-breakpoint);\n  padding-left: 20px;\n  padding-right: 20px;\n  margin: 0 auto;\n\n  justify-content: center;\n  align-items: center;\n\n  /* margin: 0px 30px 20px 30px; */\n`;\n","import { TweetsList } from 'components/TweetsList/TweetsList';\n\nimport { Section } from './Tweets.styled';\n\nconst Tweets = () => {\n  return (\n    <Section>\n      <TweetsList />\n    </Section>\n  );\n};\nexport default Tweets;\n"],"names":["getTweets","axios","response","data","console","error","TweetsList","useState","tweets","setTweets","useEffect","savedState","JSON","parse","localStorage","getItem","length","API","then","setItem","stringify","className","styles","map","id","user","followers","avatar","isFollowing","followersWithComma","toString","replace","followButtonText","followButtonClass","src","clouds","alt","loading","goit","photoNotFound","title","onClick","userId","prevTweets","tweet","newFollowers","parseInt","Section","styled"],"sourceRoot":""}